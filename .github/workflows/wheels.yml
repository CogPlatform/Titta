name: Wheels

# Note: the cibuildwheel options are inside pyproject.toml

on:
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Build SDist
      run: |
        cd SDK_wrapper
        pipx run build --sdist

    - name: Check metadata
      run: |
        cd SDK_wrapper
        pipx run twine check dist/*

    - uses: actions/upload-artifact@v3
      with:
        path: SDK_wrapper/dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - uses: pypa/cibuildwheel@v2.11.4
      with:
        package-dir: SDK_wrapper
      env:
        CIBW_BUILD: cp*-manylinux_x86_64 cp*-musllinux_x86_64 cp*-macosx_x86_64 cp*-win_amd64
        CIBW_MANYLINUX_X86_64_IMAGE: quay.io/pypa/manylinux_2_28_x86_64
        CIBW_BEFORE_BUILD_MACOS: uname -a
        MACOSX_DEPLOYMENT_TARGET: 11

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl


  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist

    - uses: pypa/gh-action-pypi-publish@v1.6.4
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
